-- MySQL Script generated by MySQL Workbench
-- Sat Nov 14 00:45:09 2015
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema tenant
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `tenant` ;

-- -----------------------------------------------------
-- Schema tenant
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `tenant` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `tenant` ;

-- -----------------------------------------------------
-- Table `tenant`.`org`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tenant`.`org` ;

CREATE TABLE IF NOT EXISTS `tenant`.`org` (
  `org_id` INT NOT NULL AUTO_INCREMENT,
  `org_name` VARCHAR(45) NULL,
  `org_type` VARCHAR(45) NULL,
  `org_pid` VARCHAR(45) NULL,
  `state` VARCHAR(45) NULL,
  `create_id` VARCHAR(45) NULL,
  `create_at` VARCHAR(45) NULL,
  `update_id` VARCHAR(45) NULL,
  `update_at` VARCHAR(45) NULL,
  PRIMARY KEY (`org_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tenant`.`tenant`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tenant`.`tenant` ;

CREATE TABLE IF NOT EXISTS `tenant`.`tenant` (
  `tenant_id` INT NOT NULL AUTO_INCREMENT,
  `tenant_name` VARCHAR(45) NULL,
  `org_id` INT NULL,
  `state` INT NULL,
  `create_id` VARCHAR(45) NULL,
  `create_at` VARCHAR(45) NULL,
  `update_id` VARCHAR(45) NULL,
  `update_at` VARCHAR(45) NULL,
  PRIMARY KEY (`tenant_id`),
  INDEX `fk_tenant_org_idx` (`org_id` ASC),
  CONSTRAINT `fk_tenant_org`
    FOREIGN KEY (`org_id`)
    REFERENCES `tenant`.`org` (`org_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tenant`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tenant`.`user` ;

CREATE TABLE IF NOT EXISTS `tenant`.`user` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `user_name` VARCHAR(45) NULL,
  `org_id` INT NULL,
  `state` INT NULL,
  `creta_id` VARCHAR(45) NULL,
  `create_at` VARCHAR(45) NULL,
  `update_id` VARCHAR(45) NULL,
  `update_at` VARCHAR(45) NULL,
  PRIMARY KEY (`user_id`),
  INDEX `fk_user_org_idx` (`org_id` ASC),
  CONSTRAINT `fk_user_org`
    FOREIGN KEY (`org_id`)
    REFERENCES `tenant`.`org` (`org_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tenant`.`course`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tenant`.`course` ;

CREATE TABLE IF NOT EXISTS `tenant`.`course` (
  `course_id` INT NOT NULL AUTO_INCREMENT,
  `course_name` VARCHAR(45) NULL,
  `tenant_id` INT NULL,
  `state` INT NULL,
  `create_id` VARCHAR(45) NULL,
  `create_at` VARCHAR(45) NULL,
  `update_id` VARCHAR(45) NULL,
  `update_at` VARCHAR(45) NULL,
  PRIMARY KEY (`course_id`),
  INDEX `fk_course_tenant_idx` (`tenant_id` ASC),
  CONSTRAINT `fk_course_tenant`
    FOREIGN KEY (`tenant_id`)
    REFERENCES `tenant`.`tenant` (`tenant_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tenant`.`menu`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tenant`.`menu` ;

CREATE TABLE IF NOT EXISTS `tenant`.`menu` (
  `menu_id` INT NOT NULL AUTO_INCREMENT,
  `menu_name` VARCHAR(45) NULL,
  `state` INT NULL,
  `create_id` VARCHAR(45) NULL,
  `create_at` VARCHAR(45) NULL,
  `update_id` VARCHAR(45) NULL,
  `update_at` VARCHAR(45) NULL,
  PRIMARY KEY (`menu_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tenant`.`rule`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tenant`.`rule` ;

CREATE TABLE IF NOT EXISTS `tenant`.`rule` (
  `rule_id` INT NOT NULL AUTO_INCREMENT,
  `menu_id` INT NULL,
  `user_id` INT NULL,
  `state` INT NULL,
  `create_id` VARCHAR(45) NULL,
  `create_at` VARCHAR(45) NULL,
  `update_id` VARCHAR(45) NULL,
  `update_at` VARCHAR(45) NULL,
  PRIMARY KEY (`rule_id`),
  INDEX `fk_rule_user_idx` (`user_id` ASC),
  INDEX `fk_rule_menu_idx` (`menu_id` ASC),
  CONSTRAINT `fk_rule_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `tenant`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_rule_menu`
    FOREIGN KEY (`menu_id`)
    REFERENCES `tenant`.`menu` (`menu_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tenant`.`seller`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tenant`.`seller` ;

CREATE TABLE IF NOT EXISTS `tenant`.`seller` (
  `seller_id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NULL,
  `org_id` INT NULL,
  `tenant_id` INT NULL,
  `seller_level` VARCHAR(45) NULL,
  `ceate_id` VARCHAR(45) NULL,
  `create_at` VARCHAR(45) NULL,
  `update_id` VARCHAR(45) NULL,
  `update_at` VARCHAR(45) NULL,
  PRIMARY KEY (`seller_id`),
  INDEX `fk_sell_user_idx` (`user_id` ASC),
  INDEX `fk_sell_tenant_idx` (`tenant_id` ASC),
  INDEX `fk_sell_org_idx` (`org_id` ASC),
  CONSTRAINT `fk_sell_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `tenant`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sell_tenant`
    FOREIGN KEY (`tenant_id`)
    REFERENCES `tenant`.`tenant` (`tenant_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sell_org`
    FOREIGN KEY (`org_id`)
    REFERENCES `tenant`.`org` (`org_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tenant`.`buyer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tenant`.`buyer` ;

CREATE TABLE IF NOT EXISTS `tenant`.`buyer` (
  `buyer_id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NULL,
  `tenant_id` INT NULL,
  `org_id` INT NULL,
  `buyer_levle` VARCHAR(45) NULL,
  `create_id` VARCHAR(45) NULL,
  `create_at` VARCHAR(45) NULL,
  `update_id` VARCHAR(45) NULL,
  `update_at` VARCHAR(45) NULL,
  PRIMARY KEY (`buyer_id`),
  INDEX `fk_buy_user_idx` (`user_id` ASC),
  INDEX `fk_buy_tenant_idx` (`tenant_id` ASC),
  INDEX `fk_buy_org_idx` (`org_id` ASC),
  CONSTRAINT `fk_buy_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `tenant`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_buy_tenant`
    FOREIGN KEY (`tenant_id`)
    REFERENCES `tenant`.`tenant` (`tenant_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_buy_org`
    FOREIGN KEY (`org_id`)
    REFERENCES `tenant`.`org` (`org_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tenant`.`manager`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tenant`.`manager` ;

CREATE TABLE IF NOT EXISTS `tenant`.`manager` (
  `manager_id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NULL,
  `tenant_id` INT NULL,
  `org_id` INT NULL,
  `creat_id` VARCHAR(45) NULL,
  `creat_at` VARCHAR(45) NULL,
  `update_id` VARCHAR(45) NULL,
  `update_at` VARCHAR(45) NULL,
  PRIMARY KEY (`manager_id`),
  INDEX `fk_man_user_idx` (`user_id` ASC),
  INDEX `fk_man_tenant_idx` (`tenant_id` ASC),
  INDEX `fk_man_org_idx` (`org_id` ASC),
  CONSTRAINT `fk_man_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `tenant`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_man_tenant`
    FOREIGN KEY (`tenant_id`)
    REFERENCES `tenant`.`tenant` (`tenant_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_man_org`
    FOREIGN KEY (`org_id`)
    REFERENCES `tenant`.`org` (`org_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SET SQL_MODE = '';
GRANT USAGE ON *.* TO tenant;
 DROP USER tenant;
SET SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';
CREATE USER 'tenant' IDENTIFIED BY '123456';

GRANT ALL ON `tenant`.* TO 'tenant';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
